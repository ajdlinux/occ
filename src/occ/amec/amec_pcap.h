/******************************************************************************
// @file amec_pcap.h
// @brief AMEC power cap header file
*/
/******************************************************************************
 *
 *       @page ChangeLogs Change Logs
 *       @section _amec_pcap_h amec_pcap.h
 *       @verbatim
 *
 *   Flag    Def/Fea    Userid    Date        Description
 *   ------- ---------- --------  ----------  ----------------------------------
 *   @fk001  879727     fmkassem  04/24/2013  New file
 *   @rt001  897459     tapiar    08/20/2013  moved PDROP_THRESH to .h
 *
 *  @endverbatim
 *
 *///*************************************************************************/
#ifndef _AMEC_PCAP_H
#define _AMEC_PCAP_H

//*************************************************************************
// Includes
//*************************************************************************
#include <occ_common.h>
#include <errl.h>

//*************************************************************************
// Externs
//*************************************************************************

//*************************************************************************
// Macros
//*************************************************************************

//*************************************************************************
// Defines/Enums
//*************************************************************************

//Number of watts power must be below the node power cap before raising 
//ppb_fmax
#define PDROP_THRESH        0   //TODO: need better value.

//Structure used in g_amec
typedef struct amec_pcap
{
    uint16_t ovs_node_pcap;     //Oversub node power cap in 1W units
    uint16_t norm_node_pcap;    //Normal node power cap in 1W units
    uint16_t active_node_pcap;  //Currently active node power cap in 1W units
    uint16_t active_proc_pcap;  //Currently active proc power cap in 1W units
} amec_pcap_t;

//*************************************************************************
// Structures
//*************************************************************************

//*************************************************************************
// Globals
//*************************************************************************

//*************************************************************************
// Function Prototypes
//*************************************************************************

//*************************************************************************
// Functions
//*************************************************************************

// Calls all power control algorithms
void amec_power_control();

#endif

